---
# Source: jitsi-meet/charts/jitsi-meet/charts/prosody/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-prosody
  labels:
    helm.sh/chart: prosody-1.3.8
    app.kubernetes.io/name: prosody
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "stable-9111"
    app.kubernetes.io/managed-by: Helm
---
# Source: jitsi-meet/charts/jitsi-meet/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-jitsi-meet
  labels:
    helm.sh/chart: jitsi-meet-1.3.8
    app.kubernetes.io/name: jitsi-meet
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "stable-9111"
    app.kubernetes.io/managed-by: Helm
---
# Source: jitsi-meet/charts/jitsi-meet/charts/prosody/templates/envs-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: release-name-prosody
  labels:
    helm.sh/chart: prosody-1.3.8
    app.kubernetes.io/name: prosody
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "stable-9111"
    app.kubernetes.io/managed-by: Helm
type: Opaque
data:
---
# Source: jitsi-meet/charts/jitsi-meet/templates/jicofo/xmpp-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: release-name-prosody-jicofo
  labels:
    helm.sh/chart: jitsi-meet-1.3.8
    app.kubernetes.io/name: jitsi-meet
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "stable-9111"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: jicofo
type: Opaque
data:
  JICOFO_AUTH_USER: 'jicofo_auth_user'
  JICOFO_AUTH_PASSWORD: 'password'
  JICOFO_COMPONENT_SECRET: 'cG9yY29kAW8KA=='
---
# Source: jitsi-meet/charts/jitsi-meet/templates/jvb/xmpp-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: release-name-prosody-jvb
  labels:
    helm.sh/chart: jitsi-meet-1.3.8
    app.kubernetes.io/name: jitsi-meet
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "stable-9111"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: jvb
type: Opaque
data:
  JVB_AUTH_USER: 'jvb_auth_user'
  JVB_AUTH_PASSWORD: 'password'
---
# Source: jitsi-meet/charts/jitsi-meet/charts/prosody/templates/envs-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-prosody
  labels:
    helm.sh/chart: prosody-1.3.8
    app.kubernetes.io/name: prosody
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "stable-9111"
    app.kubernetes.io/managed-by: Helm
data:
---
# Source: jitsi-meet/charts/jitsi-meet/templates/common-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-prosody-common
  labels:
    helm.sh/chart: jitsi-meet-1.3.8
    app.kubernetes.io/name: jitsi-meet
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "stable-9111"
    app.kubernetes.io/managed-by: Helm
data:
  ENABLE_AUTH: "0"
  ENABLE_GUESTS: "1"
  PUBLIC_URL: vc.##YOUR_HOST##
  XMPP_DOMAIN: meet.jitsi
  XMPP_MUC_DOMAIN: muc.meet.jitsi
  XMPP_AUTH_DOMAIN: auth.meet.jitsi
  XMPP_GUEST_DOMAIN: guest.meet.jitsi
  XMPP_RECORDER_DOMAIN: recorder.meet.jitsi
  XMPP_INTERNAL_MUC_DOMAIN: internal-muc.meet.jitsi
  ENABLE_COLIBRI_WEBSOCKET: 'false'
  ENABLE_XMPP_WEBSOCKET: 'false'
  TZ: 'Europe/Amsterdam'
---
# Source: jitsi-meet/charts/jitsi-meet/templates/jicofo/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-jitsi-meet-jicofo
  labels:
    helm.sh/chart: jitsi-meet-1.3.8
    app.kubernetes.io/name: jitsi-meet
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "stable-9111"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: jicofo
data:
  JVB_BREWERY_MUC: 'jvbbrewery'
  XMPP_SERVER: 'release-name-prosody.jitsi-meet.svc.cluster.local'
---
# Source: jitsi-meet/charts/jitsi-meet/templates/jvb/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-jitsi-meet-jvb
  labels:
    helm.sh/chart: jitsi-meet-1.3.8
    app.kubernetes.io/name: jitsi-meet
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "stable-9111"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: jvb
data:
  JVB_BREWERY_MUC: 'jvbbrewery'
  JVB_PORT: '10000'
  JVB_STUN_SERVERS: 'meet-jit-si-turnrelay.jitsi.net:443'
  JVB_TCP_HARVESTER_DISABLED: '1'
  XMPP_SERVER: 'release-name-prosody.jitsi-meet.svc.cluster.local'
  COLIBRI_REST_ENABLED: 'true'
---
# Source: jitsi-meet/charts/jitsi-meet/templates/web/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-jitsi-meet-web
  labels:
    helm.sh/chart: jitsi-meet-1.3.8
    app.kubernetes.io/name: jitsi-meet
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "stable-9111"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: web
data:
  DISABLE_HTTPS: "1"
  ENABLE_HTTP_REDIRECT: "0"
  JICOFO_AUTH_USER: jicofo_auth_user
  XMPP_BOSH_URL_BASE: 'http://release-name-prosody.jitsi-meet.svc.cluster.local:5280'
---
# Source: jitsi-meet/charts/jitsi-meet/charts/prosody/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-prosody
  labels:
    helm.sh/chart: prosody-1.3.8
    app.kubernetes.io/name: prosody
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "stable-9111"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 5280
      protocol: TCP
      name: tcp-bosh-insecure
    - port: 5281
      protocol: TCP
      name: tcp-bosh-secure
    - port: 5347
      protocol: TCP
      name: tcp-xmpp-component
    - port: 5222
      protocol: TCP
      name: tcp-xmpp-c2
    - port: 5269
      protocol: TCP
      name: tcp-xmpp-s2
  selector:
    app.kubernetes.io/name: prosody
    app.kubernetes.io/instance: release-name
---
# Source: jitsi-meet/charts/jitsi-meet/templates/jvb/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-jitsi-meet-jvb
  annotations:
  labels:
    helm.sh/chart: jitsi-meet-1.3.8
    app.kubernetes.io/name: jitsi-meet
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "stable-9111"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: jvb
spec:
  type: NodePort
  ports:
  - name: rtp-udp
    nodePort: 32222
    port: 10000
    protocol: UDP
    targetPort: 10000
  selector:
    app.kubernetes.io/name: jitsi-meet
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: jvb
---
# Source: jitsi-meet/charts/jitsi-meet/templates/web/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-jitsi-meet-web
  labels:
    helm.sh/chart: jitsi-meet-1.3.8
    app.kubernetes.io/name: jitsi-meet
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "stable-9111"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: web
spec:
  type: ClusterIP
  ports:
    - port: 80
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: jitsi-meet
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: web
---
# Source: jitsi-meet/charts/jitsi-meet/templates/jicofo/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-jitsi-meet-jicofo
  labels:
    helm.sh/chart: jitsi-meet-1.3.8
    app.kubernetes.io/name: jitsi-meet
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "stable-9111"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: jicofo
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: jitsi-meet
      app.kubernetes.io/instance: release-name
      app.kubernetes.io/component: jicofo
  template:
    metadata:
      labels:
        app.kubernetes.io/name: jitsi-meet
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/component: jicofo
      annotations:
        checksum/config: 3c9dff9b706114796a74b80c23f69222929f25a7aa2e4785259dcfb3ad3aac77
        checksum/secret: 8a5332cae27315331c8e605215372fb54228a906330b17c4eac1a4da73cc293c
    spec:
      serviceAccountName: release-name-jitsi-meet
      securityContext:
        {}
      containers:
        - name: jitsi-meet
          securityContext:
            {}
          image: "jitsi/jicofo:stable-9111"
          imagePullPolicy: IfNotPresent
          envFrom:
          - secretRef:
              name: release-name-prosody-jicofo
          - configMapRef:
              name: release-name-prosody-common
          - configMapRef:
              name: release-name-jitsi-meet-jicofo
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          livenessProbe:
            tcpSocket:
              port: 8888
          readinessProbe:
            tcpSocket:
              port: 8888
          resources:
            {}
---
# Source: jitsi-meet/charts/jitsi-meet/templates/jvb/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-jitsi-meet-jvb
  labels:
    helm.sh/chart: jitsi-meet-1.3.8
    app.kubernetes.io/name: jitsi-meet
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "stable-9111"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: jvb
  annotations:
    
    service.beta.kubernetes.io/do-loadbalancer-healthcheck-port: "8080"
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: jitsi-meet
      app.kubernetes.io/instance: release-name
      app.kubernetes.io/component: jvb
  template:
    metadata:
      labels:
        app.kubernetes.io/name: jitsi-meet
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/component: jvb
      annotations:
        checksum/config: d963708b0c42969824ca9ecc1567063d7cce8fc98fcd53b2ddd0e984bd66a87e
        checksum/secret: 3894970c5606251949ee3c2074bd9bb6f6637e7efb162bc9e803a2d9fe16124b
    spec:
      serviceAccountName: release-name-jitsi-meet
      securityContext:
        {}
      containers:
        - name: jitsi-meet
          securityContext:
            {}
          image: "jitsi/jvb:stable-9111"
          imagePullPolicy: IfNotPresent
          envFrom:
          - secretRef:
              name: release-name-prosody-jvb
          - configMapRef:
              name: release-name-prosody-common
          - configMapRef:
              name: release-name-jitsi-meet-jvb
          env:
          - name: DOCKER_HOST_ADDRESS
            valueFrom:
              configMapKeyRef:
                name: loadbalancer
                key: loadbalancer_ip
          - name: JVB_ADVERTISE_IPS
            valueFrom:
              configMapKeyRef:
                name: loadbalancer
                key: loadbalancer_ip
          ports:
            - name: rtp-udp
              containerPort: 10000
              protocol: UDP
          livenessProbe:
            httpGet:
              path: /about/health
              port: 8080
          readinessProbe:
            httpGet:
              path: /about/health
              port: 8080
          resources:
            {}
---
# Source: jitsi-meet/charts/jitsi-meet/templates/web/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-jitsi-meet-web
  labels:
    helm.sh/chart: jitsi-meet-1.3.8
    app.kubernetes.io/name: jitsi-meet
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "stable-9111"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: web
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: jitsi-meet
      app.kubernetes.io/instance: release-name
      app.kubernetes.io/component: web
  template:
    metadata:
      labels:
        app.kubernetes.io/name: jitsi-meet
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/component: web
      annotations:
        checksum/config: edd41b064d723a21abb4862691b42b5cf51bbe074c5c9747eb2ef01bd60dc154
    spec:
      serviceAccountName: release-name-jitsi-meet
      securityContext:
        {}
      containers:
        - name: jitsi-meet
          securityContext:
            {}
          image: "jitsi/web:stable-9111"
          imagePullPolicy: IfNotPresent
          envFrom:
          - configMapRef:
              name: release-name-jitsi-meet-web
          - configMapRef:
              name: release-name-prosody-common
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
            - name: https
              containerPort: 443
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: 80
          readinessProbe:
            httpGet:
              path: /
              port: 80
          resources:
            {}
---
# Source: jitsi-meet/charts/jitsi-meet/charts/prosody/templates/statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: release-name-prosody
  labels:
    helm.sh/chart: prosody-1.3.8
    app.kubernetes.io/name: prosody
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "stable-9111"
    app.kubernetes.io/managed-by: Helm
spec:
  serviceName: "release-name-prosody"
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: prosody
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        app.kubernetes.io/name: prosody
        app.kubernetes.io/instance: release-name
      annotations:
        si.jit.meet/hash-secret: "44136fa355b3678a1146ad16f7e8649e"
        si.jit.meet/hash-configmap: "74234e98afe7498fb5daf1f36ac2d78a"
    spec:
      serviceAccountName: release-name-prosody
      securityContext:
        {}
      containers:
        - name: prosody
          securityContext:
            {}
          image: "jitsi/prosody:stable-9111"
          imagePullPolicy: IfNotPresent
          envFrom:
          - configMapRef:
              name: release-name-prosody
          - secretRef:
              name: release-name-prosody
          - secretRef:
              name: 'release-name-prosody-jicofo'
          - secretRef:
              name: 'release-name-prosody-jvb'
          - configMapRef:
              name: 'release-name-prosody-common'
          ports:
            - name: xmpp-c2s
              containerPort: 5222
              protocol: TCP
            - name: xmpp-s2s
              containerPort: 5269
              protocol: TCP
            - name: xmpp-component
              containerPort: 5347
              protocol: TCP
            - name: bosh-insecure
              containerPort: 5280
              protocol: TCP
            - name: bosh-secure
              containerPort: 5281
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /http-bind
              port: bosh-insecure
          readinessProbe:
            httpGet:
              path: /http-bind
              port: bosh-insecure
          resources:
            {}
          volumeMounts:
          - name: prosody-data
            mountPath: /config/data
      volumes:
      - name: prosody-data
        persistentVolumeClaim:
          claimName: prosody-data
  volumeClaimTemplates:
  - metadata:
      name: prosody-data
    spec:
      accessModes:
        - ReadWriteOnce
      volumeMode: Filesystem
      resources:
        requests:
          storage: 3G
---
# Source: jitsi-meet/charts/jitsi-meet/templates/ingress.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: release-name-jitsi-meet-web
  labels:
    helm.sh/chart: jitsi-meet-1.3.8
    app.kubernetes.io/name: jitsi-meet
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "stable-9111"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: web
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt
spec:
  ingressClassName: nginx
  tls:
    - hosts:
        - "vc.##YOUR_HOST##"
      secretName: jitsi-web-certificate
  rules:
    - host: "vc.##YOUR_HOST##"
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: release-name-jitsi-meet-web
                port:
                  number: 80
---
# Source: jitsi-meet/charts/jitsi-meet/charts/prosody/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "release-name-prosody-test-connection"
  labels:
    helm.sh/chart: prosody-1.3.8
    app.kubernetes.io/name: prosody
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "stable-9111"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": test-success
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args: ['release-name-prosody:5280/http-bind']
  restartPolicy: Never
---
# Source: jitsi-meet/charts/jitsi-meet/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "release-name-jitsi-meet-web-test-connection"
  labels:
    helm.sh/chart: jitsi-meet-1.3.8
    app.kubernetes.io/name: jitsi-meet
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "stable-9111"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: web
  annotations:
    "helm.sh/hook": test-success
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args: ['release-name-jitsi-meet-web:80']
  restartPolicy: Never
